<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>706</width>
    <height>640</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="0">
    <widget class="QLineEdit" name="lineEdit_path">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The first step in making a database, enter a directory that contains images or contains subdirectories with images. Then select the method of tagging you want to enable (loading tags from an external file, via API, or autotagging), then create the database.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="placeholderText">
      <string>Enter Database Path</string>
     </property>
    </widget>
   </item>
   <item row="0" column="1">
    <widget class="QPushButton" name="pushButton_open_path">
     <property name="text">
      <string>Open</string>
     </property>
    </widget>
   </item>
   <item row="1" column="0" colspan="2">
    <layout class="QGridLayout" name="gridLayout_4">
     <item row="1" column="0" colspan="2">
      <widget class="QPushButton" name="pushButton_reapply_to_database">
       <property name="toolTip">
        <string>Re-applies the tagging/processes below to images currently in the database.</string>
       </property>
       <property name="text">
        <string>Re-Apply to Database</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QPushButton" name="pushButton_add_new_images">
       <property name="toolTip">
        <string>Use this to add new images to a pre-existing database.  Load a database and select the tagging criterions and click on this.</string>
       </property>
       <property name="text">
        <string>Add New Images</string>
       </property>
      </widget>
     </item>
     <item row="3" column="0" colspan="2">
      <widget class="QPushButton" name="pushButton_create_database">
       <property name="toolTip">
        <string>Create a database using the enabled settng below.  If nothing is enabled it'll just make a database with the images with no tag/caption assigned to them.</string>
       </property>
       <property name="text">
        <string>Create Database</string>
       </property>
      </widget>
     </item>
     <item row="0" column="0">
      <widget class="QPushButton" name="pushButton_load_database">
       <property name="toolTip">
        <string>Enter a database directory, and this will load any database in the folder.</string>
       </property>
       <property name="text">
        <string>Load Database</string>
       </property>
      </widget>
     </item>
     <item row="5" column="0" colspan="2">
      <widget class="QPushButton" name="pushButton_save_database">
       <property name="toolTip">
        <string>Saves the created or loaded database.</string>
       </property>
       <property name="text">
        <string>Save Database</string>
       </property>
      </widget>
     </item>
     <item row="2" column="0" colspan="2">
      <widget class="Line" name="line_4">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
      </widget>
     </item>
     <item row="4" column="0" colspan="2">
      <widget class="Line" name="line_5">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item row="2" column="0" colspan="2">
    <layout class="QHBoxLayout" name="horizontalLayout">
     <item>
      <layout class="QVBoxLayout" name="verticalLayout_2">
       <item>
        <widget class="QGroupBox" name="groupBox">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="MinimumExpanding">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="title">
          <string>External Tag Sources</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_3">
          <item>
           <widget class="QGroupBox" name="groupBox_4">
            <property name="title">
             <string>Retrieve Tags Via API (No guarantee finding tags for all images)</string>
            </property>
            <layout class="QGridLayout" name="gridLayout_3">
             <item row="1" column="0">
              <widget class="QCheckBox" name="checkBox_gelbooru">
               <property name="toolTip">
                <string>Use API to get the tags of images with matching md5 hashes</string>
               </property>
               <property name="text">
                <string>Check gelbooru</string>
               </property>
              </widget>
             </item>
             <item row="3" column="0">
              <widget class="QCheckBox" name="checkBox_rule34">
               <property name="toolTip">
                <string>Use API to get the tags of images with matching md5 hashes</string>
               </property>
               <property name="text">
                <string>Check rule34.xxx</string>
               </property>
              </widget>
             </item>
             <item row="1" column="1">
              <widget class="QCheckBox" name="checkBox_unsafe_gelbooru">
               <property name="toolTip">
                <string>Tries to keep only tags that are known by this tagger (all tags are stored but not shown) (mostly exclude non sensical tags)</string>
               </property>
               <property name="text">
                <string>Filter gelbooru tags</string>
               </property>
              </widget>
             </item>
             <item row="0" column="0" colspan="2">
              <widget class="QCheckBox" name="checkBox_danbooru">
               <property name="toolTip">
                <string>Use API to get the tags of images with matching md5 hashes</string>
               </property>
               <property name="text">
                <string>Check danbooru</string>
               </property>
              </widget>
             </item>
             <item row="3" column="1">
              <widget class="QCheckBox" name="checkBox_unsafe_rule34">
               <property name="toolTip">
                <string>Tries to keep only tags that are known by this tagger (all tags are stored but not shown) (mostly exclude non sensical tags)</string>
               </property>
               <property name="text">
                <string>Filter rule34.xxx tags</string>
               </property>
              </widget>
             </item>
            </layout>
           </widget>
          </item>
          <item>
           <widget class="QGroupBox" name="groupBox_5">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="title">
             <string>Tags from files</string>
            </property>
            <layout class="QVBoxLayout" name="verticalLayout_6">
             <item>
              <widget class="QCheckBox" name="checkBox_offline_tags">
               <property name="toolTip">
                <string>Enable this to load tags from a local file in the same directory, usually a .txt file next to the images with the tags</string>
               </property>
               <property name="text">
                <string>Enable</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QCheckBox" name="checkBox_both_names_tags">
               <property name="toolTip">
                <string>As an example, enable this to search both &quot;image_name.txt&quot; and &quot;image_name.png.txt&quot; for &quot;image_name.png&quot;</string>
               </property>
               <property name="text">
                <string>Search for files with both the image extension and without (only one will be taken)</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLineEdit" name="lineEdit_offline_extension_tags">
               <property name="text">
                <string/>
               </property>
               <property name="placeholderText">
                <string>extension name, example: .txt</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLineEdit" name="lineEdit_offline_name_tags">
               <property name="placeholderText">
                <string>name used to identify the source of the tags, example: gpt4-o</string>
               </property>
              </widget>
             </item>
            </layout>
           </widget>
          </item>
          <item>
           <widget class="QGroupBox" name="groupBox_6">
            <property name="title">
             <string>Captions from files</string>
            </property>
            <layout class="QVBoxLayout" name="verticalLayout_8">
             <item>
              <widget class="QCheckBox" name="checkBox_offline_captions">
               <property name="toolTip">
                <string>Enable this to load captions from a local file in the same directory, usually a .txt or .caption file next to the images with the captions</string>
               </property>
               <property name="text">
                <string>Enable</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QCheckBox" name="checkBox_both_names_captions">
               <property name="toolTip">
                <string>As an example, enable this to search both &quot;image_name.txt&quot; and &quot;image_name.png.txt&quot; for &quot;image_name.png&quot;</string>
               </property>
               <property name="text">
                <string>Search for files with both the image extension and without (only one will be taken)</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLineEdit" name="lineEdit_offline_extension_caption">
               <property name="toolTip">
                <string>enter the extension for the images with the caption. usually a .txt or .caption file</string>
               </property>
               <property name="text">
                <string/>
               </property>
               <property name="placeholderText">
                <string>extension name, example: .caption</string>
               </property>
              </widget>
             </item>
            </layout>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_2">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </item>
     <item>
      <layout class="QVBoxLayout" name="verticalLayout">
       <item>
        <widget class="QGroupBox" name="groupBox_3">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="title">
          <string>Automatic Tagging Tools</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_4">
          <item>
           <widget class="QCheckBox" name="checkBox_use_taggers">
            <property name="toolTip">
             <string>Use the taggers configured in the setting tab to autotag the images</string>
            </property>
            <property name="text">
             <string>Use taggers</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="checkBox_use_aesthetic_scorer">
            <property name="toolTip">
             <string>Score the images so they can be compared via an aesthetic score.</string>
            </property>
            <property name="text">
             <string>Use aesthetic scorer</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="checkBox_use_classifier">
            <property name="toolTip">
             <string>Use an additional img source classifier and add medium/source tags to imgs above a threshold, useful for checkpoints</string>
            </property>
            <property name="text">
             <string>Use classifier</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="checkBox_use_completeness">
            <property name="toolTip">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Use an additional img completeness classifier and add tags like &amp;quot;rough art&amp;quot; to imgs above a threshold, useful for checkpoints and identifying completed works vs a quick drawing that's better than a sketch&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Use completeness identifier</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_7">
         <property name="title">
          <string>Object detection options</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_5">
          <item>
           <widget class="QCheckBox" name="checkBox_detect_people">
            <property name="text">
             <string>Detect people(s)</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="checkBox_detect_head">
            <property name="text">
             <string>Detect head(s)</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="checkBox_detect_hand">
            <property name="text">
             <string>Detect hand(s)</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_2">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="title">
          <string>Pre &amp; Post tagging options</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_2">
          <item row="3" column="0" colspan="2">
           <widget class="QCheckBox" name="checkBox_groups_from_folders">
            <property name="toolTip">
             <string>automatically assign images to groups, use the parent folder's name for group name</string>
            </property>
            <property name="text">
             <string>Create groups following folder structure</string>
            </property>
           </widget>
          </item>
          <item row="0" column="0" colspan="2">
           <widget class="QCheckBox" name="checkBox_rename_to_md5">
            <property name="toolTip">
             <string>Updates the filename to the exact md5 hash (post tagging)</string>
            </property>
            <property name="text">
             <string>Rename Images to MD5</string>
            </property>
           </widget>
          </item>
          <item row="2" column="0" colspan="2">
           <widget class="QCheckBox" name="checkBox_move_duplicates_out_of_folder">
            <property name="toolTip">
             <string>move duplicate (matching md5 hash) files to duplicate folder</string>
            </property>
            <property name="text">
             <string>Move duplicate images out of folder</string>
            </property>
           </widget>
          </item>
          <item row="1" column="0" colspan="2">
           <widget class="QCheckBox" name="checkBox_rename_to_png">
            <property name="toolTip">
             <string>convert image to png (post tagging)</string>
            </property>
            <property name="text">
             <string>Convert Images to PNG</string>
            </property>
           </widget>
          </item>
          <item row="4" column="0">
           <widget class="QCheckBox" name="checkBox_filter_all_images">
            <property name="text">
             <string>Apply tag filter</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
