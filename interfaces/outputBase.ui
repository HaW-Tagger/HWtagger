<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>453</width>
    <height>795</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <layout class="QGridLayout" name="gridLayout">
     <item row="0" column="1">
      <widget class="QCheckBox" name="checkBox_use_separator">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>50</width>
         <height>0</height>
        </size>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Use the token separator set in the setting. &lt;br/&gt;&lt;br/&gt;Useful for separating the trigger words (Kohya based trainers have a &amp;quot;use token separator&amp;quot; option). This allows you to have a variable length trigger word.&lt;br/&gt;&lt;br/&gt;if this is enabled, tags in the main and secondary are placed in front of the tags and the token separator is placed to separate it from the rest of the tag.&lt;br/&gt;&lt;/p&gt;&lt;p&gt;The tag order in main trigger tag(s) are unshuffled&lt;br/&gt;The tag order in secondary trigger tag(s) is shuffled&lt;br/&gt;The other tags are shuffled.&lt;br/&gt;&lt;br/&gt;Here's an example with &amp;quot;|||&amp;quot; as token separator, 1 main trigger word, and 3 secondary trigger word:  main_trigger tag, secondary_tag_3, secondary_tag_1, secondary_tag_2, |||, rest of the tags, ...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Token Separator</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="0" column="0">
      <widget class="QCheckBox" name="checkBox_trigger_tags">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>put trigger tags at the front</string>
       </property>
       <property name="text">
        <string>Trigger Tags</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QCheckBox" name="checkBox_sentence_separator">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Place sentence (caption) infront of the token separator.&lt;/p&gt;&lt;p&gt;Useful if you want natural language in the front of the tags&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Sentence in Token Separator</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="QCheckBox" name="checkBox_aesthetic_score_in_token_separator">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>Include the quality tags from the aesthetic scores and place them into the main trigger tag section.</string>
       </property>
       <property name="text">
        <string>Aesthetic scores in token separator</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QCheckBox" name="checkBox_use_sentence">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>include any sentences/caption in the export.  If no captions were set, they're not added to the exported file(s)</string>
       </property>
       <property name="text">
        <string>Sentence</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="2" column="0" colspan="2">
      <widget class="QCheckBox" name="checkBox_remove_tags_in_sentence">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Enable this to remove tags that are included in the sentence. This is to reduce potential duplicates in both the caption and tags.&lt;br/&gt;Example: &lt;br/&gt;caption: &amp;quot;1girl sitting on a chair thinking and contemplating life&amp;quot;&lt;br/&gt;tag: &amp;quot;1girl, solo, chair, sitting, red hair, green eyes, blue shirt&amp;quot;&lt;br/&gt;--&amp;gt; &lt;/p&gt;&lt;p&gt;caption and a shorter tag list is exported: caption + &amp;quot;solo, red hair, green eyes, blue shirt&amp;quot;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Remove tag if included in sentence</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QCheckBox" name="checkBox_export_aesthetic_score">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Ignored" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Lookup what aesthetic score values map to any quality tags, then export the aesthetic/quality tag with the other tags.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Aesthetic scores</string>
       </property>
       <property name="checked">
        <bool>false</bool>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <widget class="QLineEdit" name="lineEdit_main_trigger_tag">
     <property name="minimumSize">
      <size>
       <width>50</width>
       <height>0</height>
      </size>
     </property>
     <property name="acceptDrops">
      <bool>true</bool>
     </property>
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Tags in the main and secondary are placed in front of the other tags. Look at token separator if you want to use token separator with your exporting. You don't need token separator if the count of the trigger tags are constant.&lt;/p&gt;&lt;p&gt;You can add a * to a tag and it will add all variants to the selection. Example: hole* will add black hole, white hole, sinkhole, whole grain, ...&lt;/p&gt;&lt;p&gt;The tag order in main trigger tag(s) are unshuffled&lt;/p&gt;&lt;p&gt;The tag order in secondary trigger tag(s) is shuffled&lt;/p&gt;&lt;p&gt;The other tags are shuffled.&lt;/p&gt;&lt;p&gt;Here's an example with no token separator, 1 main trigger word, and 3 secondary trigger word: main_trigger tag, secondary_tag_3, secondary_tag_1, secondary_tag_2, rest of the tags, ...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="placeholderText">
      <string>Main Trigger Tag(s), Separate with &quot;,&quot;</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPlainTextEdit" name="plainTextEdit_secondary_trigger_tags">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="minimumSize">
      <size>
       <width>50</width>
       <height>50</height>
      </size>
     </property>
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Tags in the main and secondary are placed in front of the other tags. Look at token separator if you want to use token separator with your exporting. You don't need token separator if the count of the trigger tags are constant.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;You can add a * to a tag and it will add all variants to the selection. Example: hole* will add black hole, white hole, sinkhole, whole grain, ...&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;The tag order in main trigger tag(s) are unshuffled&lt;/p&gt;&lt;p&gt;The tag order in secondary trigger tag(s) is shuffled&lt;/p&gt;&lt;p&gt;The other tags are shuffled.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Here's an example with no token separator, 1 main trigger word, and 3 secondary trigger word: main_trigger tag, secondary_tag_3, secondary_tag_1, secondary_tag_2, rest of the tags, ...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="sizeAdjustPolicy">
      <enum>QAbstractScrollArea::AdjustIgnored</enum>
     </property>
     <property name="backgroundVisible">
      <bool>false</bool>
     </property>
     <property name="placeholderText">
      <string>Secondary Tag(s), Separated with &quot;,&quot;</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPushButton" name="pushButton_txt_file">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="minimumSize">
      <size>
       <width>50</width>
       <height>0</height>
      </size>
     </property>
     <property name="toolTip">
      <string>create a txt file containing the full tags, same as the first tab</string>
     </property>
     <property name="text">
      <string>Create TXT files</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPushButton" name="pushButton_json_tags_file">
     <property name="toolTip">
      <string>useful for checkpoints, makes a .json with the captions and tags. Exports like the meta_cap.json in Kohya.  You can run the meta_lat creator from Kohya directly on this exported json</string>
     </property>
     <property name="text">
      <string>Create .json tag file</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPushButton" name="pushButton_create_jsonl">
     <property name="text">
      <string>Create .jsonl file (for HF dataset library)</string>
     </property>
    </widget>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout_6">
     <property name="bottomMargin">
      <number>0</number>
     </property>
     <item row="0" column="0">
      <widget class="QPushButton" name="pushButton_make_sample_toml">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click on this button to generate a toml that can be used by the trainer to generate the samples. It does some calculations to make a distribution weighted by the &amp;quot;complexity&amp;quot; of the image, and then it samples tags from some images until it fills the sample size (default is 10)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Generate sample TOML</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QComboBox" name="comboBox_toml_resolution">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;this defines the base output resolution in the toml (using buckets)&lt;/p&gt;&lt;p&gt;SDXL: (1024, 1024)&lt;/p&gt;&lt;p&gt;SD1.5: (768, 768)&lt;/p&gt;&lt;p&gt;SD1.0: (512, 512)&lt;/p&gt;&lt;p&gt;Custom Resolution: (modify in setting)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <item>
        <property name="text">
         <string>SDXL</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>SD1.5</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>SD1.0</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>Custom</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="1" column="0" colspan="2">
      <widget class="QCheckBox" name="checkBox_restrictive_candidates">
       <property name="text">
        <string>Use more restrictive conditions</string>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
